# This will import all the widgets
# and modules which are available in
# tkinter and ttk module
from tkinter import *
from tkinter.ttk import *
from CodeForHeight import *

# creates a Tk() object
master = Tk()

# sets the title of the
# Toplevel widget
master.title("Choose your Units:")
img = PhotoImage(file = r"C:\Users\james\OneDrive\Desktop\Spring '22\CSC 132\Pi Activities\please work.gif")
backgroundImage = Label(image = img)
backgroundImage.pack(fill=BOTH)
backgroundImage.place(x=-5, y=-5)

# sets the geometry of toplevel
master.geometry("280x150")
master.resizable(False, False)
canvas = Canvas(master, bg="white", width= 220 , height= 140)
canvas.pack(pady=10)

def centimeters():
#     CodeForHeight.get_distance()
#     CodeforHeight.get_distance_for_servo()
#     CodeForHeight.get_height()
    pass
def meters():
    CodeForHeight.get_distance()
    CodeforHeight.get_distance_for_servo()
    CodeForHeight.get_height()
    final = CodeForHeight.get_height()
    final // 100 = good
    return good
    pass

def inches():
    pass
#     CodeForHeight.get_distance()
#     CodeforHeight.get_distance_for_servo()
#     final = CodeForHeight.get_height()
#     final * (25/64) = good
#     return good
    
def feet():
    pass
#     CodeForHeight.get_distance()
#     CodeforHeight.get_distance_for_servo()
#     CodeForHeight.get_height()
#     final = CodeForHeight.get_height()
#     final // 30.48 = good
#     return good
def yards():
    pass
#     CodeForHeight.get_distance()
#     CodeforHeight.get_distance_for_servo()
#     CodeForHeight.get_height()
#     final = CodeForHeight.get_Height()
#     final // 91.44 = good
#     return good
# function to open a new window
# on a button click
def standardUnits():
	
    # Toplevel object which will
    # be treated as a new window
    newWindow = Toplevel(master)

    # sets the title of the
    # Toplevel widget
    newWindow.title("Standard Units")

    # sets the geometry of toplevel
    newWindow.geometry("280x150")
    newWindow.resizable(False, False)

    # a new canvas
    canvas2 = Canvas(newWindow, bg="white",width= 220 , height= 140)
    canvas2.pack(pady=10)

    # a good background
    img2 = PhotoImage(file = r"C:\Users\james\OneDrive\Desktop\Spring '22\CSC 132\Pi Activities\Flag_of_the_United_Kingdom.svg.gif")
    backgroundImage2 = Label(image = img2)
    backgroundImage2.pack(fill=BOTH)
    backgroundImage2.place(x=-5, y=-5)

    # A Label widget to show in toplevel
    # spec = Label(newWindow, text ="Choose a specific measurement:")
    # spec.pack()
    
    sbtn = Button(canvas2, text ="Click for Inches", command = inches())
    sbtn.pack(pady = 10)

    sbtntwo = Button(canvas2, text="Click for Feet:", command = feet())
    sbtntwo.pack(pady=10)

    sbtnthree = Button(canvas2, text = "Click for Yards:", command=yards())
    sbtnthree.pack(pady=10) 
   


def metricUnits():
	
    # Toplevel object which will
    # be treated as a new window
    newWindow = Toplevel(master)

    # sets the title of the
    # Toplevel widget
    newWindow.title("Metric Units")

    # sets the geometry of toplevel
    newWindow.geometry("280x150")

    
    img3 = PhotoImage( file = r"C:\Users\james\OneDrive\Desktop\Spring '22\CSC 132\Pi Activities\Flag_of_the_United_Kingdom.svg.gif")
    # new Canvas 
    canvas3 = Canvas(newWindow, bg="white", width= 220 , height= 100)
    canvas3.pack(fill=BOTH, expand=True)
    canvas3.create_image(0,0, image = img3, anchor="nw")
    

    # A Label widget to show in toplevel
    # spec = Label(newWindow, text ="Choose a specific measurement:")
    # spec.pack()

    mbtn = Button(canvas3, text = "Click for Centimeters:", command=centimeters())
    mbtn.pack(pady=10, fill=BOTH)

    mbtntwo = Button(canvas3, text="Click for Meters:", command=meters())
    mbtntwo.pack(pady=10, fill=BOTH)
        
btn = Button(canvas,text ="Click for Metric Units",command = metricUnits, )
btn.pack(pady = 10, fill=BOTH)

btntwo = Button(canvas,text ="Click for Standard Units",command = standardUnits)
btntwo.pack(pady = 10, fill=BOTH)

# mainloop, runs infinitely
mainloop()
